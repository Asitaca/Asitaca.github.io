I"y<p>노드를 통해 다양한 자바스크립트 애플리케이션을 실행할 수 있으며, 서버를 실행하는 데 제일 많이 사용된다.</p>

<p>Node.js는 JavaScript를 서버에서도 사용할 수 있도록 만든 프로그램이다.
Node.js는 V8이라는 JavaScript 엔진 위에서 동작하는 자바스크립트 런타임(환경)이다.
Node.js는 서버사이트 스크립트 언어가 아니다. 프로그램(환경)이다.
Node.js는 웹서버와 같이 확장성 있는 네트워크 프로그램을 제작하기 위해 만들어졌다.</p>

<h3 id="v8-engine이다">V8 Engine이다.</h3>
<p>node는 구글 크롬 웹브라우저의 자바스크립트 엔진인 V8을 기반으로 자바스크립트를 사용한다.
이는 노드에 진입 장벽을 낮춰준다. 엔진 중 가장 빠른 성능을 그대로 물려 받았다.
Google V8 엔진에서 실행되기 때문에 자바스크립트를 직접 기계어로 컴파일하여
대부분 보다 빠르다.</p>

<h3 id="event-방식">Event 방식</h3>
<p>노드는 V8과 더불어 libuv라는 라이브러리르 사용합니다. libuv 라이브러리는 노드의 특성인 이벤트 기반, 논 블로킹 I/O 모델을 구현하고 있습니다.
이벤트 기반(event-driven)이란 이벤트가 발생할 때 미리 지정해둔 작업을 수행하는 방식을 의미합니다. 즉, 이벤트 기반 시스템에서는 특정 이벤트가 발생할 때 무엇을 할지 미리 등록해두고, 이를 이벤트 리스너에 콜백 함수를 등록 합니다. 이후 이벤트가 발생하면 리스너에 등록해둔 콜백 함수를 호출하며 이벤트가 끝난 후 노드는 다음 이벤트가 발생할 때까지 대기합니다</p>

<h3 id="non---blocking-비동기패러다임">non - blocking (비동기)패러다임</h3>
<p>블록킹I/O를 사용하면 스레드가 블록킹되고 스레드가 대기 상태에 있게 된다.
이는 시간과 메모리를 낭비하게 된다.
Node의 모든 I/O는 비동기로 동작하는 non - blocking I/O이다.
I/O 작업을 진행하는 동안 유저의 프로세스의 작업을 중단시키지 않는다.
non - blocking 경우 read/write 이벤트가 시작하자마자 모듈을 변환시켜 다른
작업을 준비하도록 한다
따라서
non - blockingI/O 장점 : 빠르다, 쉽다, 적은 메모리</p>

<h3 id="single-thread">Single Thread</h3>
<p>강점일수도 있고 단점일수도 있다
특징에 가깝다.
단일스레드의 장점은 적은양의 자원으로 일을 처리할수 있다.
이벤트 기반 응용 프로그램에서 이벤트를 처리하고 오류가 난다면
싱글 스레드가 코드를 처리하면서 블록킹되지 않고 다른 작업을 처리한다.
요청 순서에 따라 결과가 돌아오지 않는다.
//예외가 발생한다면 어플리케이션 전체에 영향을!!!</p>

<h3 id="뛰어난-확장성-현재-진행형인-다양한-모듈들">뛰어난 확장성, 현재 진행형인 다양한 모듈들</h3>
<p>다양한 모듈들이 Node.js에서 사용할 수 있도록 만들어져 있습니다
본인이 필요하 기능에 적합한 모듈을 설치할 수 있다는 뜻이며
이 모듈들을 활용하여 또 다른 모듈을 만들거ㅏ, 프레임워크를 만들 수도 있습니다
또한 이런 모듈들을 사용하는데 파일 하나로 쉽게 관리할 수 있습니다</p>

<h3 id="결론">결론</h3>
<p>노드는 기본적으로 싱글 스레드, 논 블로킹 모델을 채용하므로 I/O 요청이 많이 발생하면 노드를 서버로 사용하는 것이 좋습니다. 하지만 노드는 CPU 부하가 큰 작업에는 적합하지 않습니다. 우리가 작성하는 코드는 모두 스레드 하나에서 처리되기 때문에 코드가 CPU연산을 많이 요구하면 스레드 하나가 혼자서 감당하기 어렵습니다.
즉, 개수는 많지만 크기는 작은 데이터를 실시간으로 주고받는데 노드는 적합합니다. 예를 들어 네트워크나 데이터베이스, 디스크 작업 같은 I/O에 특화되어 있습니다. 실시간 채팅 애플리케이션, 주식 차트도 포함됩니다.
결론적으로 노드의 장점은 첫째, 멀티 스레드 방식에 비해 적은 컴퓨터 자원을 사용합니다. 둘째, I/O작업이 많은 서버로 적합합니다. 셋째, 웹 서버가 내장되어 있어 별도의 웹서버를 설치할 필요가 없습니다. 넷째, 자바스크립트를 사용하기 때문에 JSON 형식과 쉽게 호환됩니다.</p>

<p>출처:<br />
https://velog.io/@kimkevin90/Nodejs-%EA%B0%9C%EB%85%90-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0Nodejs-%EB%9E%80<br />
https://songc92.tistory.com/62
https://imraccoon-developer.tistory.com/12</p>
:ET